from django.shortcuts import render
 
from SerialNumberGenerator.baseFunction import *



class CreditManagement(View):
    def post(self,request):
        response={"message":"","status":"failed","code":200,"callBack":"CreditManaagement"}
        try:
            headers = getHeaders(request)
            response.update({"message":"X_CSRF_TOKEN is missing in headers"})
            if 'X_CSRF_TOKEN' in  headers and headers['X_CSRF_TOKEN']!='':
                response.update({"message":"points are missing"})
                if 'points' in request.POST and request.POST['points']!="":
                    response.update({"message":"remarks is missing"})
                    if "remarks" in request.POST and request.POST['remarks']!='':
                        response=self.createCreditManagementDef(headers['X_CSRF_TOKEN'],request.POST['points'],request.POST['remarks'],response)
        except Exception as e:
            response.update({"message":str(e),"status": "failed"})
        return HttpResponse(dumps(response))
    def createCreditManagementDef(self,userToken,points,remarks,response):
        usersCheck=verifyUserToken(userToken)
        statusCheck=loads(dumps(db.users.find({},{"_id":0,"status":1})))
        # usersCheck=loads(dumps(DATABASE.users.find({"userToken":userToken},{'_id':0,'role':1,'userId':1}))) # check the users
        response.update({"message":'Invalid User'})
        if usersCheck:
            userId=usersCheck['userId']
          #  status=usersCheck['status']
            roleName=usersCheck['role']
            statusCheck=loads(dumps(db.users.find({"userId":userId},{"_id":0,"status":1})))
            print(statusCheck[0]['status'])
            
            status1=statusCheck[0]['status']
            print("status1",status1)
            response.update({"message":"valid user"})
            if status1=="active":
               # userData = loads(dumps(db.users.find({"userId":userId,"status":"active"}, {'_id':0,'role':1,"userId":1,"userName":1,"email":1,"phoneNumber":1})))
                db.points.insert({"pointsReqested":points,"requestId":requestId(),"userId":userId,"paymentModeOn":timeStamp(),"paymentMode":"","isPaymentDone":"No"})
                response.update({"message":"points are requested","code":200,"status":"success","callBack":"CreditManagment"})
        return response

#**********************************************************************#
class LoadCredit(View):
    def post(self,request):
        response={"message":"","status":"failed","code":200,"callBack":"LoadCredit"}
        try:
            headers = getHeaders(request)
            response.update({"message":"X-CSRF-TOKEN is missing in headers"})
            if 'X_CSRF_TOKEN' in  headers and headers['X_CSRF_TOKEN']!='':
                usersCheck=verifyUserToken(['X_CSRF_TOKEN'])
                roleName=usersCheck['role']
                userId=usersCheck['userId']
                if roleName=="admin":
                    #response.update({"message":"Enter points"})
                    response=self.loadCreditDef(headers['X_CSRF_TOKEN'],userId,request.get("points",None),response)
                
        except Exception as e:
            response.update({"message":str(e),"status":"failed"})
        return HttpResponse(dumps(response),content_type="application/json")

    def loadCreditDef(self,userToken,userId,points,response):
        db.points.find({"points":points})
        response.update({"message":"requested sent successfully","status":"success","code":200})
        return response